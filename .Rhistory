demo()
q89
q()
# Definiendo la carpeta de trabajo
setwd("/home/kevin/Documents/Trabajo de Grado 2022/PruebaFuncional")
# Revisando que se cambio la ruta de la carpeta
getwd()
# Librerias
## Cargar datos .txt
library(readr)
## Para manipular (crear, transformar, filtrar variables)
library(dplyr)
## Para graficar
library(ggplot2)
## Para generar estadísticas descriptivas
library(psych)
## Para trabajar con variables categóricas (factores)
library(forcats)
library(tidyr)
DatosEvalFun <- read_delim("DatosEvalFun-10resp.csv",
delim = ",", escape_double = FALSE, col_types = cols(Id = col_integer(),
Q1 = col_integer(), Q2 = col_integer(),
Q3 = col_integer(), ...10 = col_skip()),
trim_ws = TRUE)
View(DatosEvalFun)
df <- data.frame(dose=c("Q1", "Q2", "Q3"),
len=c(mean_t1_q1, mean_t1_q2, mean_t1_q3))
# Basic barplot
p<-ggplot(data=df, aes(x=dose, y=len, fill=dose)) +
geom_bar(stat="identity", width=0.5)
Q1 = DatosEvalFun %>%
group_by(Tarea, Q1) %>%
summarise(conteo = n()) %>%
ungroup() %>%
rename(respuesta = Q1) %>%
complete(nesting(Tarea), respuesta = seq(1,5))
expand(nesting(Tarea, conteo), respuesta = seq(1,5))
plotQ1 <- ggplot(Q1, aes(x = Tarea, y = conteo, fill = as.factor(respuesta))) +
geom_bar(position="dodge", stat = "identity") +
labs(fill = "Escala") +
ylim(0, 10) +
scale_fill_manual(values=c("#F24405", "#F2911B","#F2CF1D","#A3BF3F","#5A7340")) +
labs(
title = "Resultados de la pregunta 1:",
subtitle = "\"En general, estoy satisfecho con la facilidad para completar esta tarea.\"",
caption = "Datos obtenidos de la prueba funcional - RivitWeb.",
x = "Tareas",
y = "Frecuencia"
)
plotQ1 + theme_classic() + theme(
panel.grid.major = element_line(colour = "gray", linetype = "dotted"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
Q2 = DatosEvalFun %>%
group_by(Tarea, Q2) %>%
summarise(conteo = n()) %>%
ungroup() %>%
rename(respuesta = Q2) %>%
complete(nesting(Tarea), respuesta = seq(1,5))
Q1 = DatosEvalFun %>%
group_by(Tarea, Q1) %>%
summarise(conteo = n()) %>%
ungroup() %>%
rename(respuesta = Q1) %>%
complete(nesting(Tarea), respuesta = seq(1,5))
expand(nesting(Tarea, conteo), respuesta = seq(1,5))
plotQ1 <- ggplot(Q1, aes(x = Tarea, y = conteo, fill = as.factor(respuesta))) +
geom_bar(position="dodge", stat = "identity") +
labs(fill = "Escala") +
ylim(0, 10) +
scale_fill_manual(values=c("#F24405", "#F2911B","#F2CF1D","#A3BF3F","#5A7340")) +
labs(
title = "Resultados de la pregunta 1:",
subtitle = "\"En general, estoy satisfecho con la facilidad para completar esta tarea.\"",
x = "Tareas",
y = "Frecuencia"
)
plotQ1 + theme_classic() + theme(
panel.grid.major = element_line(colour = "gray", linetype = "dotted"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
Q2 = DatosEvalFun %>%
group_by(Tarea, Q2) %>%
summarise(conteo = n()) %>%
ungroup() %>%
rename(respuesta = Q2) %>%
complete(nesting(Tarea), respuesta = seq(1,5))
expand(nesting(Tarea, conteo), respuesta = seq(1,5))
plotQ2 <- ggplot(Q2, aes(x = Tarea, y = conteo, fill = as.factor(respuesta))) +
geom_bar(position="dodge", stat = "identity") +
labs(fill = "Escala") +
ylim(0, 10) +
scale_fill_manual(values=c("#F24405", "#F2911B","#F2CF1D","#A3BF3F","#5A7340")) +
labs(
title = "Resultados de la pregunta 2:",
subtitle = "\"En general, estoy satisfecho con la cantidad de tiempo que \ntomó completar esta tarea.\"",
x = "Tareas",
y = "Frecuencia"
)
plotQ2 + theme_classic() + theme(
panel.grid.major = element_line(colour = "gray", linetype = "dotted"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
Q3 = DatosEvalFun %>%
group_by(Tarea, Q3) %>%
summarise(conteo = n()) %>%
ungroup() %>%
rename(respuesta = Q3) %>%
complete(nesting(Tarea), respuesta = seq(1,5))
expand(nesting(Tarea, conteo), respuesta = seq(1,5))
plotQ3 <- ggplot(Q3, aes(x = Tarea, y = conteo, fill = as.factor(respuesta))) +
geom_bar(position="dodge", stat = "identity") +
labs(fill = "Escala") +
ylim(0, 10) +
scale_fill_manual(values=c("#F24405", "#F2911B","#F2CF1D","#A3BF3F","#5A7340")) +
labs(
title = "Resultados de la pregunta 3:",
subtitle = "\"En general, estoy satisfecho con la información de soporte \n(ayuda en línea, mensaje, documentación) al completar esta tarea.\"",
x = "Tareas",
y = "Frecuencia"
)
plotQ3 + theme_classic() + theme(
panel.grid.major = element_line(colour = "gray", linetype = "dotted"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
a
a
a
tarCom = DatosEvalFun %>%
group_by(Tarea, Completado) %>%
summarise(conteo = n(), fr = n()/10)
tareaCompletada = DatosEvalFun %>%
count(Tarea, Completado) %>%
ungroup() %>%
rename(respuesta = n) %>%
complete(nesting(Tarea), Completado)
# version 1
plotTareaComp <- ggplot(tareaCompletada, aes(x = Tarea, y = respuesta, fill = Completado)) +
geom_bar(position="dodge", stat = "identity") +
labs(fill = "¿Completada?") +
ylim(0, 10) +
scale_fill_manual(values=c("#F24405","#5A7340")) +
labs(
title = "Resultados de completitud de tareas",
x = "Tareas",
y = "Frecuencia"
)
# version 2
plotTareaComp <- ggplot(tareaCompletada,
aes(x = Tarea, y = respuesta, fill = Completado)) +
geom_bar(stat = "identity") +
labs(fill = "¿Completada?") +
ylim(0, 10) +
scale_fill_manual(values=c("#F24405","#5A7340")) +
labs(
title = "Resultados de completitud de tareas",
x = "Tareas",
y = "Frecuencia"
)
plotTareaComp +
geom_text(aes(y = respuesta, label = respuesta),
vjust=1.6,
color="white",
size=3.5) +
theme_classic() + theme(
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
library(scales)
library(dplyr)
datosDem = DatosEvalFun %>%
group_by(Nombre, Sexo, Edad) %>%
summarise(conteo = n())
edadMedia = median(datosDem$Edad)
edadMedia
edadPromedio = mean(datosDem$Edad)
edadPromedio
edadMin = min(datosDem$Edad)
edadMin
edadMax = max(datosDem$Edad)
edadMax
countMujeres = datosDem %>%
group_by(Sexo) %>%
summarise(conteo = n(), porcentaje = scales::percent(conteo/10))
ggplot(countMujeres,aes(x="",y=conteo, fill=Sexo))+
geom_bar(stat = "identity",
color="white")+
geom_text(aes(label=porcentaje),
position=position_stack(vjust=0.5),color="white",size=6)+
coord_polar(theta = "y")+
scale_fill_manual(values=c("#298BF2","#F241C6"))+
theme_void()+
labs(
title = "Porcentaje de Participación",
)
# version 2
plotTareaComp <- ggplot(tareaCompletada,
aes(x = Tarea, y = respuesta, fill = Completado)) +
geom_bar(stat = "identity") +
labs(fill = "¿Completada?") +
ylim(0, 10) +
scale_fill_manual(values=c("#F24405","#5A7340")) +
labs(
title = "Resultados de completitud de tareas",
x = "Tareas",
y = "Frecuencia"
)
plotTareaComp +
geom_text(aes(y = respuesta, label = respuesta),
vjust=1.6,
color="white",
size=3.5) +
theme_classic() + theme(
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
plotTareaComp +
geom_text(aes(y = respuesta, label = respuesta),
vjust=1.6,
color="white",
size=3.5) +
theme_classic() + theme(
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "bottom"
)
library(scales)
plotTareaComp +
geom_text(aes(y = respuesta, label = respuesta),
vjust=0.5,
color="white",
size=3.5) +
theme_classic() + theme(
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
plotTareaComp +
geom_text(aes(y = respuesta, label = respuesta),
position = position_stack(vjust = 0.5),
vjust=1.6,
color="white",
size=3.5) +
theme_classic() + theme(
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
plotTareaComp +
geom_text(aes(y = respuesta, label = respuesta),
position = position_stack(vjust = 1.5),
color="white",
size=3.5) +
theme_classic() + theme(
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
plotTareaComp +
geom_text(aes(y = respuesta, label = respuesta),
position = position_stack(vjust = 0.5),
color="white",
size=3.5) +
theme_classic() + theme(
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
