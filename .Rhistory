demo()
q89
q()
# Definiendo la carpeta de trabajo
setwd("/home/kevin/Documents/Trabajo de Grado 2022/PruebaFuncional")
# Revisando que se cambio la ruta de la carpeta
getwd()
# Librerias
## Cargar datos .txt
library(readr)
## Para manipular (crear, transformar, filtrar variables)
library(dplyr)
## Para graficar
library(ggplot2)
## Para generar estadísticas descriptivas
library(psych)
## Para trabajar con variables categóricas (factores)
library(forcats)
library(tidyr)
DatosEvalFun <- read_delim("DatosEvalFun-10resp.csv",
delim = ",", escape_double = FALSE, col_types = cols(Id = col_integer(),
Q1 = col_integer(), Q2 = col_integer(),
Q3 = col_integer(), ...10 = col_skip()),
trim_ws = TRUE)
View(DatosEvalFun)
datos_tarea_1 = DatosEvalFun %>%
filter(`Tarea` == 'Tarea 1')
View(datos_tarea_1)
mean_t1_q1 = mean(datos_tarea_1$Q1)
mean_t1_q2 = mean(datos_tarea_1$Q2)
mean_t1_q3 = mean(datos_tarea_1$Q3)
df <- data.frame(dose=c("Q1", "Q2", "Q3"),
len=c(mean_t1_q1, mean_t1_q2, mean_t1_q3))
# Basic barplot
p<-ggplot(data=df, aes(x=dose, y=len, fill=dose)) +
geom_bar(stat="identity", width=0.5)
p
# create a dataset
tareas <- c(rep("T1" , 5) , rep("T2" , 5) , rep("T3" , 5) , rep("T4" , 5) )
escala <- rep(c("r1" , "r2", "r3" , "r4" , "r5") , 4)
frecuencia <- abs(rnorm(20 , 0 , 20))
data_q1 <- data.frame(tareas,tareas,frecuencia)
# Grouped
ggplot(data_q1, aes(fill=escala, y=frecuencia, x=tareas)) +
geom_bar(position="dodge", stat="identity")
Q1 = DatosEvalFun %>%
group_by(Tarea, Q1) %>%
summarise(conteo = n()) %>%
ungroup() %>%
rename(respuesta = Q1) %>%
complete(nesting(Tarea), respuesta = seq(1,5))
expand(nesting(Tarea, conteo), respuesta = seq(1,5))
plotQ2 <- ggplot(Q2, aes(x = Tarea, y = conteo, fill = as.factor(respuesta))) +
geom_bar(position="dodge", stat = "identity") +
labs(fill = "Escala") +
ylim(0, 10) +
scale_fill_manual(values=c("#F24405", "#F2911B","#F2CF1D","#A3BF3F","#5A7340")) +
labs(
title = "Resultados de la pregunta 2:",
subtitle = "\"En general, estoy satisfecho con la cantidad de tiempo que \ntomó completar esta tarea.\"",
x = "Tareas",
y = "Frecuencia"
)
plotQ2 + theme_classic() + theme(
panel.grid.major = element_line(colour = "gray", linetype = "dotted"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
Q3 = DatosEvalFun %>%
group_by(Tarea, Q3) %>%
summarise(conteo = n()) %>%
ungroup() %>%
rename(respuesta = Q3) %>%
complete(nesting(Tarea), respuesta = seq(1,5))
expand(nesting(Tarea, conteo), respuesta = seq(1,5))
plotQ3 <- ggplot(Q3, aes(x = Tarea, y = conteo, fill = as.factor(respuesta))) +
geom_bar(position="dodge", stat = "identity") +
labs(fill = "Escala") +
ylim(0, 10) +
scale_fill_manual(values=c("#F24405", "#F2911B","#F2CF1D","#A3BF3F","#5A7340")) +
labs(
title = "Resultados de la pregunta 3:",
subtitle = "\"En general, estoy satisfecho con la información de soporte \n(ayuda en línea, mensaje, documentación) al completar esta tarea.\"",
x = "Tareas",
y = "Frecuencia"
)
plotQ3 + theme_classic() + theme(
panel.grid.major = element_line(colour = "gray", linetype = "dotted"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
tarCom = DatosEvalFun %>%
group_by(Tarea, Completado) %>%
summarise(conteo = n(), fr = n()/10)
tareaCompletada = DatosEvalFun %>%
count(Tarea, Completado) %>%
ungroup() %>%
rename(respuesta = n) %>%
complete(nesting(Tarea), Completado)
# version 1
plotTareaComp <- ggplot(tareaCompletada, aes(x = Tarea, y = respuesta, fill = Completado)) +
geom_bar(position="dodge", stat = "identity") +
labs(fill = "¿Completada?") +
ylim(0, 10) +
scale_fill_manual(values=c("#F24405","#5A7340")) +
labs(
title = "Resultados de completitud de tareas",
x = "Tareas",
y = "Frecuencia"
)
# version 2
plotTareaComp <- ggplot(tareaCompletada,
aes(x = Tarea, y = respuesta, fill = Completado)) +
geom_bar(stat = "identity") +
labs(fill = "¿Completada?") +
ylim(0, 10) +
scale_fill_manual(values=c("#F24405","#5A7340")) +
labs(
title = "Resultados de completitud de tareas",
x = "Tareas",
y = "Frecuencia"
)
plotTareaComp +
geom_text(aes(y = respuesta, label = respuesta),
position = position_stack(vjust = 0.5),
color="white",
size=3.5) +
theme_classic() + theme(
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
library(scales)
library(dplyr)
datosDem = DatosEvalFun %>%
group_by(Nombre, Sexo, Edad) %>%
summarise(conteo = n())
edadMedia = median(datosDem$Edad)
edadMedia
edadPromedio = mean(datosDem$Edad)
edadPromedio
edadMin = min(datosDem$Edad)
edadMin
edadMax = max(datosDem$Edad)
edadMax
countMujeres = datosDem %>%
group_by(Sexo) %>%
summarise(conteo = n(), porcentaje = scales::percent(conteo/10))
ggplot(countMujeres,aes(x="",y=conteo, fill=Sexo))+
geom_bar(stat = "identity",
color="white")+
geom_text(aes(label=porcentaje),
position=position_stack(vjust=0.5),color="white",size=6)+
coord_polar(theta = "y")+
scale_fill_manual(values=c("#298BF2","#F241C6"))+
theme_void()+
labs(
title = "Porcentaje de Participación",
)
View(Q1)
View(Q1)
View(Q1)
View(tarCom)
View(tareaCompletada)
View(tarCom)
medCompTarSi -> median(c(10,6,9,10,10,10,10))
medCompTarSi
medCompTarSi -> median(c(10,6,9,10,10,10,10))
medCompTarSi
medCompTarSi -> median(c(10,6,9,10,10,10,10))
medCompTarSi = median(c(10,6,9,10,10,10,10))
medCompTarSi
Q1 = DatosEvalFun %>%
group_by(Tarea, Q1) %>%
summarise(conteo = n()) %>%
ungroup() %>%
rename(respuesta = Q1) %>%
complete(nesting(Tarea), respuesta = seq(1,5))
expand(nesting(Tarea, conteo), respuesta = seq(1,5))
plotQ1 <- ggplot(Q1, aes(x = Tarea, y = conteo, fill = as.factor(respuesta))) +
geom_bar(position="dodge", stat = "identity") +
labs(fill = "Escala") +
ylim(0, 10) +
scale_fill_manual(values=c("#F24405", "#F2911B","#F2CF1D","#A3BF3F","#5A7340")) +
labs(
title = "Resultados de la pregunta 1:",
subtitle = "\"En general, estoy satisfecho con la facilidad para completar esta tarea.\"",
x = "Tareas",
y = "Frecuencia"
)
plotQ1 + theme_classic() + theme(
panel.grid.major = element_line(colour = "gray", linetype = "dotted"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
View(plotQ1)
View(Q1)
medCompTarSi = median(c(0,0,2,1,7))
medCompTarSi
medTar1Q1 = median(c(0,0,2,1,7))
medTar2Q1 = median(c(0,0,3,5,2))
medTar3Q1 = median(c(0,0,0,2,8))
medTar4Q1 = median(c(0,0,0,3,7))
medTar5Q1 = median(c(1,1,2,1,5))
medTar6Q1 = median(c(0,0,2,5,5))
medTar7Q1 = median(c(0,0,0,0,10))
totalMedianaQ1 = median(c(medTar1Q1, medTar2Q1, medTar3Q1, medTar4Q1, medTar5Q1, medTar6Q1, medTar7Q1))
totalMedianaQ1
medTar1Q1 = mean(c(0,0,2,1,7))
medTar2Q1 = mean(c(0,0,3,5,2))
medTar3Q1 = mean(c(0,0,0,2,8))
medTar4Q1 = mean(c(0,0,0,3,7))
medTar5Q1 = mean(c(1,1,2,1,5))
medTar6Q1 = mean(c(0,0,2,5,5))
medTar7Q1 = mean(c(0,0,0,0,10))
totalMedianaQ1 = median(c(medTar1Q1, medTar2Q1, medTar3Q1, medTar4Q1, medTar5Q1, medTar6Q1, medTar7Q1))
totalMedianaQ1
medTar1Q1 = mean(c(0,0,2,1,7))
medTar1Q1
medTar1Q1
medTar2Q1
medTar3Q1
medTar4Q1
medTar5Q1
medTar6Q1
medTar7Q1
x <- c(2, 4, 3, 6, 3, 7, 5, 8)
mean(x)
medTar1Q1 = mean(c(0,0,2,1,7), na.rm = TRUE)
medTar1Q1
medTar1Q1 = mean(c(na,na,2,1,7), na.rm = TRUE)
medTar2Q1 = mean(c(NA,NA,3,5,2))
medTar1Q1
medTar2Q1 = mean(c(NA,NA,3,5,2), na.rm = TRUE)
medTar1Q1
medTar1Q1 = mean(c(NA,NA,2,1,7), na.rm = TRUE)
medTar1Q1
medTar1Q1 = mean(c(0,0,2,1,7))
medTar2Q1 = mean(c(0,0,3,5,2))
medTar3Q1 = mean(c(0,0,0,2,8))
medTar4Q1 = mean(c(0,0,0,3,7))
medTar5Q1 = mean(c(1,1,2,1,5))
medTar6Q1 = mean(c(0,0,2,5,5))
medTar7Q1 = mean(c(0,0,0,0,10))
medTar1Q1
medTar2Q1
medTar3Q1
medTar4Q1
medTar5Q1
medTar6Q1
medTar7Q1
medTar1Q1 = median(c(0,0,2,1,7))
medTar1Q1
medTar7Q1 = mean(c(0,0,0,0,10))
medTar6Q1 = mean(c(0,0,,5,5))
medTar5Q1
medTar6Q1
medTar6Q1 = mean(c(0,0,0,5,5))
medTar6Q1
medTar7Q1
medTar7Q1 = mean(c(0,0,0,0,10))
medTar7Q1
medTar1Q1
medTar2Q1
medTar1Q1 = mean(c(0,0,2,1,7))
medTar2Q1 = mean(c(0,0,3,5,2))
medTar3Q1 = mean(c(0,0,0,2,8))
medTar4Q1 = mean(c(0,0,0,3,7))
medTar5Q1 = mean(c(1,1,2,1,5))
medTar6Q1 = mean(c(0,0,0,5,5))
medTar7Q1 = mean(c(0,0,0,0,10))
medTar1Q1
medTar2Q1
medTar3Q1
medTar4Q1
medTar5Q1
medTar6Q1
medTar7Q1
resp = Q1 %>%
group_by(respuesta) %>%
summarise_at(vars(conteo),
list(name = sum))
resp
resp = Q1 %>%
group_by(tarea) %>%
summarise_at(vars(conteo),
list(name = sum))
resp
resp = Q1 %>%
group_by(Tarea) %>%
summarise_at(vars(conteo),
list(name = sum))
resp
resp = Q1 %>%
group_by(respuesta) %>%
summarise_at(vars(conteo),
list(name = sum))
resp
resp = aggregate(x= Q1$conteo,
by = list(Q1$respuesta),
FUN = sum)
resp
GFG <- data.frame(
Category  = c (Q1$respuesta),
Frequency= replace(Q1$conteo, is.na(Q1$conteo), 0)
)
View(GFG)
View(GFG)
resp = aggregate(x= GFG$Frequency,
by = list(GFG$Category),
FUN = sum)
resp
median(resp)
median(resp$x)
# calculos de medianas
Q1Count <- data.frame(
Category  = c (Q1$respuesta),
Frequency= replace(Q1$conteo, is.na(Q1$conteo), 0)
)
resp = aggregate(x= Q1Count$Frequency,
by = list(Q1Count$Category),
FUN = sum)
resp
median(resp$x)
respQ1 = aggregate(x= Q1Count$Frequency,
by = list(Q1Count$Category),
FUN = sum)
respQ1
median(respQ1$x)
# Calculo de mediana para la pregunta 2
Q2Count <- data.frame(
Category  = c (Q2$respuesta),
Frequency= replace(Q2$conteo, is.na(Q2$conteo), 0)
)
respQ2 = aggregate(x= Q2Count$Frequency,
by = list(Q2Count$Category),
FUN = sum)
respQ2
# Calculo de mediana para la pregunta 2
Q2Count <- data.frame(
Category  = c (Q2$respuesta),
Frequency= replace(Q2$conteo, is.na(Q2$conteo), 0)
)
Q2 = DatosEvalFun %>%
group_by(Tarea, Q2) %>%
summarise(conteo = n()) %>%
ungroup() %>%
rename(respuesta = Q2) %>%
complete(nesting(Tarea), respuesta = seq(1,5))
expand(nesting(Tarea, conteo), respuesta = seq(1,5))
plotQ2 <- ggplot(Q2, aes(x = Tarea, y = conteo, fill = as.factor(respuesta))) +
geom_bar(position="dodge", stat = "identity") +
labs(fill = "Escala") +
ylim(0, 10) +
scale_fill_manual(values=c("#F24405", "#F2911B","#F2CF1D","#A3BF3F","#5A7340")) +
labs(
title = "Resultados de la pregunta 2:",
subtitle = "\"En general, estoy satisfecho con la cantidad de tiempo que \ntomó completar esta tarea.\"",
x = "Tareas",
y = "Frecuencia"
)
plotQ2 + theme_classic() + theme(
panel.grid.major = element_line(colour = "gray", linetype = "dotted"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
# Calculo de mediana para la pregunta 2
Q2Count <- data.frame(
Category  = c (Q2$respuesta),
Frequency= replace(Q2$conteo, is.na(Q2$conteo), 0)
)
respQ2 = aggregate(x= Q2Count$Frequency,
by = list(Q2Count$Category),
FUN = sum)
respQ2
median(respQ2$x)
mean(respQ2)
mean(respQ2$x)
Q2 = DatosEvalFun %>%
group_by(Tarea, Q2) %>%
summarise(conteo = n()) %>%
ungroup() %>%
rename(respuesta = Q2) %>%
complete(nesting(Tarea), respuesta = seq(1,5))
View(Q2)
View(Q2)
